
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.LiveScalarFieldEnum = {
  id: 'id',
  isPredictionEnabled: 'isPredictionEnabled',
  path: 'path',
  streamId: 'streamId',
  userId: 'userId',
  reportId: 'reportId',
  expiryDate: 'expiryDate',
  expiryTimeInMinutes: 'expiryTimeInMinutes',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  userId: 'userId',
  thumbnailUrl: 'thumbnailUrl',
  recordUrl: 'recordUrl',
  expiryTimeInMinutes: 'expiryTimeInMinutes',
  calculatedClass: 'calculatedClass',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate'
};

exports.Prisma.ReportItemsScalarFieldEnum = {
  id: 'id',
  data: 'data',
  reportId: 'reportId',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate'
};

exports.Prisma.StreamScalarFieldEnum = {
  id: 'id',
  url: 'url',
  userId: 'userId',
  inactive: 'inactive',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  roles: 'roles',
  isVerified: 'isVerified',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  photo: 'photo'
};

exports.Prisma.AuthenticationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  ipAddress: 'ipAddress',
  description: 'description',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate'
};

exports.Prisma.LogsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  code: 'code',
  ip: 'ip',
  message: 'message',
  createdDate: 'createdDate'
};

exports.Prisma.AuditScalarFieldEnum = {
  id: 'id',
  entityName: 'entityName',
  entityId: 'entityId',
  fieldName: 'fieldName',
  fieldValue: 'fieldValue',
  userId: 'userId',
  createdDate: 'createdDate'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  link: 'link',
  photo: 'photo',
  title: 'title',
  description: 'description',
  caption: 'caption',
  entityId: 'entityId',
  entityName: 'entityName',
  status: 'status',
  userId: 'userId',
  createdDate: 'createdDate'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  live: 'live',
  report: 'report',
  reportItems: 'reportItems',
  stream: 'stream',
  user: 'user',
  authentication: 'authentication',
  logs: 'logs',
  audit: 'audit',
  notification: 'notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/dintaalif/Documents/byecheating/backend/general/prisma_dist",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "postgresqlExtensions",
      "typedSql"
    ],
    "sourceFilePath": "/Users/dintaalif/Documents/byecheating/backend/general/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../.env"
  },
  "relativePath": "../prisma",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "model live {\n  id                  String    @id @default(uuid())\n  isPredictionEnabled Boolean   @default(false) // unused\n  path                String\n  streamId            String\n  stream              stream    @relation(fields: [streamId], references: [id])\n  userId              String\n  user                user      @relation(fields: [userId], references: [id])\n  reportId            String?\n  report              report?   @relation(fields: [reportId], references: [id])\n  expiryDate          DateTime?\n  expiryTimeInMinutes Int?\n  createdDate         DateTime  @default(now())\n  updatedDate         DateTime?\n}\n\nmodel report {\n  id                  String        @id @default(uuid())\n  title               String?\n  description         String?\n  userId              String\n  user                user          @relation(fields: [userId], references: [id])\n  thumbnailUrl        String?\n  recordUrl           String?\n  expiryTimeInMinutes Int?\n  calculatedClass     Json?\n  createdDate         DateTime      @default(now())\n  updatedDate         DateTime?\n  reportItems         reportItems[]\n  live                live[]\n}\n\nmodel reportItems {\n  id          String    @id @default(uuid())\n  data        String?\n  reportId    String\n  report      report    @relation(fields: [reportId], references: [id])\n  createdDate DateTime  @default(now())\n  updatedDate DateTime?\n}\n\nmodel stream {\n  id          String    @id @default(uuid())\n  url         String\n  userId      String\n  inactive    Boolean   @default(false)\n  user        user      @relation(fields: [userId], references: [id])\n  createdDate DateTime  @default(now())\n  updatedDate DateTime?\n  live        live[]\n}\n\nmodel user {\n  id             String           @id @default(uuid())\n  email          String           @unique\n  name           String\n  password       String\n  roles          String[]         @default([])\n  isVerified     Boolean          @default(false)\n  createdDate    DateTime         @default(now())\n  updatedDate    DateTime?\n  photo          String?\n  stream         stream[]\n  live           live[]\n  report         report[]\n  audit          audit[]\n  notification   notification[]\n  authentication authentication[]\n}\n\nmodel authentication {\n  id          String    @id @default(uuid())\n  userId      String\n  user        user      @relation(fields: [userId], references: [id])\n  ipAddress   String?\n  description String?\n  createdDate DateTime  @default(now())\n  updatedDate DateTime?\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pgcrypto]\n}\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../prisma_dist\"\n  previewFeatures = [\"driverAdapters\", \"typedSql\", \"postgresqlExtensions\"]\n}\n\nmodel logs {\n  id          String    @id @default(uuid())\n  type        String    @default(\"traffic\")\n  code        Int?\n  ip          String?\n  message     String\n  createdDate DateTime? @default(now())\n}\n\nmodel audit {\n  id          String    @id @default(uuid())\n  entityName  String\n  entityId    String\n  fieldName   String?\n  fieldValue  String?\n  userId      String?\n  user        user?     @relation(fields: [userId], references: [id])\n  createdDate DateTime? @default(now())\n}\n\nmodel notification {\n  id          String    @id @default(uuid())\n  link        String?\n  photo       String?\n  title       String\n  description String?\n  caption     String?\n  entityId    String?\n  entityName  String?\n  status      String?\n  userId      String\n  user        user      @relation(fields: [userId], references: [id])\n  createdDate DateTime? @default(now())\n}\n",
  "inlineSchemaHash": "8e4a03d12c431b20498634dcfffe9fb77001b3825f2d06a047d5a0858e52ff9b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"live\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPredictionEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"streamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream\",\"kind\":\"object\",\"type\":\"stream\",\"relationName\":\"liveTostream\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"liveTouser\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"report\",\"relationName\":\"liveToreport\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiryTimeInMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"reportTouser\"},{\"name\":\"thumbnailUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiryTimeInMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"calculatedClass\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reportItems\",\"kind\":\"object\",\"type\":\"reportItems\",\"relationName\":\"reportToreportItems\"},{\"name\":\"live\",\"kind\":\"object\",\"type\":\"live\",\"relationName\":\"liveToreport\"}],\"dbName\":null},\"reportItems\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"report\",\"relationName\":\"reportToreportItems\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"stream\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inactive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"streamTouser\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"live\",\"kind\":\"object\",\"type\":\"live\",\"relationName\":\"liveTostream\"}],\"dbName\":null},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream\",\"kind\":\"object\",\"type\":\"stream\",\"relationName\":\"streamTouser\"},{\"name\":\"live\",\"kind\":\"object\",\"type\":\"live\",\"relationName\":\"liveTouser\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"report\",\"relationName\":\"reportTouser\"},{\"name\":\"audit\",\"kind\":\"object\",\"type\":\"audit\",\"relationName\":\"auditTouser\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notificationTouser\"},{\"name\":\"authentication\",\"kind\":\"object\",\"type\":\"authentication\",\"relationName\":\"authenticationTouser\"}],\"dbName\":null},\"authentication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"authenticationTouser\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"logs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"audit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fieldName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fieldValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"auditTouser\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"notificationTouser\"},{\"name\":\"createdDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

